---
- name: Install ansible prerequisites
  hosts: aws_ubuntu
  gather_facts: no
  roles:
    - ansible_prerequisites

- name: set up the VM
  hosts: aws_ubuntu
  become: True
  become_user: aiida
  vars:
    - release_notes: True
    - run_tests: False
    - clean: False
    - root_user: root
  pre_tasks:
    - name: import global variables
      tags: always
      include_vars:
        file: globalconfig.yml
    - name: test global config
      debug:
        msg: RUNNING PLAYBOOK FOR '{{ vm_name }}' VERSION '{{ vm_version }}'
    - name: testing ansible environment
      debug:
        msg: Connecting to host '{{ inventory_hostname }}' as user '{{ ansible_user }}'
  roles: 
    - name: add user {{ vm_user }} with key
      role: add_user
      add_user_name: "{{ vm_user }}"
      add_user_public_key: "{{ lookup('file', './keys/aiida_tutorial_aiidaaccount.pub') }}"
    - name: Set password for root user
      role: add_user
      add_user_name: root
      add_user_password: "{{ lookup('file', './keys/aws_root_pass') }}" 
    - role: marvel-nccr.simulationbase
      tags: simulationbase
      vars:
        simulationbase_hostname: "{{ vm_hostname }}"
        simulationbase_codes_folder: "{{ vm_codes_folder }}"
    - role: marvel-nccr.ubuntu-desktop
      tags: ubuntu_dektop
      vars:
        ubuntu_desktop_browser: "{{ vm_browser }}"
        ubuntu_desktop_vm_user: "{{ vm_user }}"
      when: not headless
    - role: marvel-nccr.quantum-mobile-customizations
      tags: customizations
      vars:
        qm_customizations_vm_user: "{{ vm_user }}"
        qm_customizations_vm_password: "{{ vm_password }}"
        qm_customizations_vm_name: "{{ vm_name }}"
        qm_customizations_vm_version: "{{ vm_version }}"
        qm_customizations_vm_author: "{{ vm_author }}"
        qm_customizations_headless: "{{ vm_headless }}"
        qm_customizations_codes_folder: "{{ vm_codes_folder }}"
        qm_customizations_examples_folder: "{{ vm_examples_folder }}"
    - role: marvel-nccr.editors
      tags: editors
    - role: scheduler
      tags: scheduler
      scheduler_hostname: "{{ vm_hostname }}"
      scheduler_cpus: "{{ vm_cpus }}"
    - role: marvel-nccr.quantum-espresso
      tags: quantum_espresso
      # Note: it is important to pass this within a 'vars' group, at not at
      # the same level. This is because within a 'vars' group, the variable
      # value that we set is found also in subsequent roles, also if we run
      # only those using a tag.
      # Instead, if it's at the same level, it's only seen by this role and
      # it replaces the default value, but subsequent roles see the default.
      vars: 
        quantum_espresso_code_folder: "{{ vm_codes_folder }}"
    - role: marvel-nccr.yambo
      tags: yambo
      vars: 
        yambo_code_folder: "{{ vm_codes_folder }}"
    - role: marvel-nccr.fleur
      tags: fleur
      vars: 
        fleur_code_folder: "{{ vm_codes_folder }}"
    - role: marvel-nccr.siesta
      tags: siesta
      vars: 
        siesta_code_folder: "{{ vm_codes_folder }}"
    - role: marvel-nccr.cp2k
      tags: cp2k
      vars: 
        cp2k_code_folder: "{{ vm_codes_folder }}"
    - role: marvel-nccr.wannier90
      tags: wannier90
      vars: 
        wannier90_code_folder: "{{ vm_codes_folder }}"
    - role: aiida
      tags: aiida 
      aiida_code_folder: "{{ vm_codes_folder }}"
      aiida_localhost_cpus: "{{ vm_cpus }}"
      aiida_examples_folder: "{{ vm_examples_folder }}"
      aiida_postgres_password: "{{ lookup('file', './keys/aws_postgres_pass') }}"
    - role: jupyter
      tags: jupyter
      jupyter_headless: "{{ vm_headless }}"
    - role: aws_fixes
      tags: aws_fixes
    - role: aiida_tutorial
      tags: aiida_tutorial
      aiida_demos_folder: "{{ vm_examples_folder }}/aiida-demos"

