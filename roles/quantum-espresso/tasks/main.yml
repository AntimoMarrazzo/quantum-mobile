# Will only download once
- name: Get Quantum ESPRESSO source
  get_url:
    url: "{{ qe_url }}"
    dest: "{{ globalconfig.vm_codes_folder }}/{{  qe_src_archive }}"
  register: qe_download

- name: Extract QE source
  unarchive:
    src: "{{ qe_download.dest }}"
    dest: "{{ globalconfig.vm_codes_folder }}"
    remote_src: yes

- name: Configure QE
  shell: ./configure --enable-parallel
  args:
    creates: "{{ qe_topdir }}/make.inc"
    chdir: "{{ qe_topdir }}"
     
# this is needed because aiida isn't yet able to parse
# the new XML format
- name: "Force to use old XML format"
  lineinfile:
    path: "{{ qe_topdir }}/make.inc"
    insertafter: "DFLAGS         =  -D__FFTW3 -D__MPI"
    line: "DFLAGS        +=  -D__OLDXML"


- name: Make QE executables
  shell: "make {{ item }}"
  args:
    creates: "{{ qe_topdir }}/bin/{{ item }}.x"
    chdir: "{{ qe_topdir }}"
  with_items: "{{ qe_executables }}"
  register: qe_make

- name: Clean object files
  shell: "rm {{ qe_topdir }}/*/src/*.o"
  when: clean is defined and clean

- include_tasks: tests.yml
  when: qe_make.changed and run_tests is defined and run_tests

- name: "Put a line in ~/.bashrc to add QE to the path"
  lineinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    line: "export PATH=${PATH}:{{ qe_topdir }}/bin"
    # Do this also non-interactively
    insertbefore: "{{ reference_point_bashrc_string }}"

- include_role:
    name: release_notes
  vars:
    section: "Quantum ESPRESSO"
    option: "version"
    value: "{{ qe_version }}"

- include_role:
    name: release_notes
  vars:
    section: "Quantum ESPRESSO"
    option: "usage"
    value: >-
        Quantum ESPRESSO is installed in {{ qe_topdir }}. 
        'pw.x', 'cp.x', ... have been added to the PATH
