- name: Install torque packages
  apt: pkg={{ item }} state=present
  become: true
  with_items:
    - torque-scheduler 
    - torque-server 
    - torque-mom 
    - torque-client 

# TODO: move the following hostname-related commands to 'common'
- name: "get the machine hostname"
  become: true
  shell: "hostname"
  register: cur_hostname_command

- name: "set the machine hostname"
  become: true
  shell: "hostname {{ hostname }}"
  when: cur_hostname_command.stdout != hostname

- name: "get the hostname from file"
  become: true
  shell: "cat /etc/hostname"
  register: cur_hostnamefile_command

- name: "set the hostname in /etc/hostname"
  become: true
  shell: "echo '{{ hostname }}' > /etc/hostname"
  when: cur_hostnamefile_command.stdout != hostname

- name: "get the torque hostname"
  become: true
  shell: "cat /etc/torque/server_name"
  register: hostnamecontent_command

- name: "set the torque hostname (1)"
  become: true
  shell: "echo '{{ hostname }}' > /etc/torque/server_name"
  when: hostnamecontent_command.stdout != hostname

- name: "set the torque hostname (2)"
  become: true
  lineinfile: 
    path: "/var/spool/torque/mom_priv/config"
    line: "$pbsserver {{ hostname }}"
    create: true

- name: "set the torque hostname (3)"
  become: true
  # Setting here 2 CPUs
  lineinfile: 
    path: "/var/spool/torque/server_priv/nodes"
    line: "{{ hostname }} np=2"
    create: true

- name: Create variable from command
  shell: "ip -4 addr show | grep -Po 'inet \\K[\\d.]+' | grep -v 127.0.0.1 | head -n1"
  register: ip_address_command

- name: "set 127.0.1.1 to localhost (if it's set to the hostname, pbs server will complain"
  become: true
  lineinfile: 
    path: "/etc/hosts"
    regexp: '^127\.0\.1\.1'
    line: "127.0.1.1 localhost"
    owner: root
    group: root
    mode: 0644

- name: "set the hostname in /etc/hosts"
  become: true
  lineinfile: 
    path: "/etc/hosts"
    regexp: "{{ hostname }}$"
    line: "{{ ip_address_command.stdout }} {{ hostname }}"
    owner: root
    group: root
    mode: 0644

# Note: we need to restart because the services are already started
# when installed, and we change the hostname only afterwards
- name: (Re)start the torque services
  become: true
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - torque-server
    - torque-mom
    - torque-scheduler

- name: "Checking if torque is already configured"
  become: true
  shell: qmgr -c "print server"
  register: qmgr_check_command

- name: waiting 10 seconds for torque to start...
  shell: sleep 10
  when: 
    "'batch' not in qmgr_check_command.stdout"

  
- name: executing torque configuration
  shell: "{{ item }}"
  become: true
  with_items:
    - qmgr -c "create queue batch queue_type=execution"
    - qmgr -c "set server query_other_jobs = True"
    - qmgr -c "set queue batch resources_max.ncpus=2"
    - qmgr -c "set server default_queue=batch"
    # Torque queue set
    - qmgr -c "set queue batch enabled=True"
    - qmgr -c "set queue batch started=True"
    # Torque queue started
    - qmgr -c "set queue batch resources_default.nodes=1"
    - qmgr -c "set queue batch resources_default.walltime=3600"
    - qmgr -c "set queue batch max_running=2"
    # Torque queue parameters set
    - qmgr -c "set server scheduling=True"
    # Torque scheduling started
    - qmgr -c "unset server acl_hosts"
    - qmgr -c "set server acl_hosts={{ hostname }}"
    # Torque server ACL hosts set
  register: qmgr_command_result
  failed_when: "'Unauthorized' in qmgr_command_result.stderr"
  when: 
    "'batch' not in qmgr_check_command.stdout"

- name: Restart the torque server
  become: true
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - torque-server
    - torque-mom
    - torque-scheduler
  when: 
    "'batch' not in qmgr_check_command.stdout"

